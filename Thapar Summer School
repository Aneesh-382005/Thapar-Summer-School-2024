{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":81971,"databundleVersionId":8916601,"sourceType":"competition"}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/aneeshgrover/thapar-summer-school?scriptVersionId=185308180\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"import optuna\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom xgboost import XGBClassifier\n\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler, PolynomialFeatures\nfrom sklearn.model_selection import train_test_split, GridSearchCV, RandomizedSearchCV, KFold, cross_val_score\nfrom sklearn.ensemble import RandomForestClassifier, VotingClassifier\nfrom sklearn.metrics import log_loss\n\nfrom scipy.stats import randint\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-06-25T10:53:02.847814Z","iopub.execute_input":"2024-06-25T10:53:02.848414Z","iopub.status.idle":"2024-06-25T10:53:02.856444Z","shell.execute_reply.started":"2024-06-25T10:53:02.84838Z","shell.execute_reply":"2024-06-25T10:53:02.855475Z"},"trusted":true},"execution_count":159,"outputs":[{"name":"stdout","text":"/kaggle/input/thapar-summer-school-2024/sample_submission.csv\n/kaggle/input/thapar-summer-school-2024/train.csv\n/kaggle/input/thapar-summer-school-2024/test.csv\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Loading the data","metadata":{}},{"cell_type":"code","source":"train = pd.read_csv('/kaggle/input/thapar-summer-school-2024/train.csv')\ntest = pd.read_csv('/kaggle/input/thapar-summer-school-2024/test.csv')\nsample_submission = pd.read_csv('/kaggle/input/thapar-summer-school-2024/sample_submission.csv')\n\nprint(\"\\nTrain Data : \")\nprint(train.head())\n\nprint(\"\\nTest Data : \")\nprint(test.head())\n\nprint(\"\\nSample Submission : \")\nprint(sample_submission.head())","metadata":{"execution":{"iopub.status.busy":"2024-06-25T10:49:25.750247Z","iopub.execute_input":"2024-06-25T10:49:25.750596Z","iopub.status.idle":"2024-06-25T10:49:25.818037Z","shell.execute_reply.started":"2024-06-25T10:49:25.750568Z","shell.execute_reply":"2024-06-25T10:49:25.817077Z"},"trusted":true},"execution_count":145,"outputs":[{"name":"stdout","text":"\nTrain Data : \n   id  N_Days             Drug    Age Sex Ascites Hepatomegaly Spiders Edema  \\\n0   0     999  D-penicillamine  21532   M       N            N       N     N   \n1   1    2574          Placebo  19237   F       N            N       N     N   \n2   2    3428          Placebo  13727   F       N            Y       Y     Y   \n3   3    2576          Placebo  18460   F       N            N       N     N   \n4   4     788          Placebo  16658   F       N            Y       N     N   \n\n   Bilirubin  Cholesterol  Albumin  Copper  Alk_Phos    SGOT  Tryglicerides  \\\n0        2.3        316.0     3.35   172.0    1601.0  179.80           63.0   \n1        0.9        364.0     3.54    63.0    1440.0  134.85           88.0   \n2        3.3        299.0     3.55   131.0    1029.0  119.35           50.0   \n3        0.6        256.0     3.50    58.0    1653.0   71.30           96.0   \n4        1.1        346.0     3.65    63.0    1181.0  125.55           96.0   \n\n   Platelets  Prothrombin  Stage Status  \n0      394.0          9.7    3.0      D  \n1      361.0         11.0    3.0      C  \n2      199.0         11.7    4.0      D  \n3      269.0         10.7    3.0      C  \n4      298.0         10.6    4.0      C  \n\nTest Data : \n     id  N_Days             Drug    Age Sex Ascites Hepatomegaly Spiders  \\\n0  7905    3839  D-penicillamine  19724   F       N            Y       N   \n1  7906    2468  D-penicillamine  14975   F       N            N       N   \n2  7907      51          Placebo  13149   F       N            Y       N   \n3  7908    2330  D-penicillamine  20510   F       N            N       N   \n4  7909    1615  D-penicillamine  21904   F       N            Y       N   \n\n  Edema  Bilirubin  Cholesterol  Albumin  Copper  Alk_Phos    SGOT  \\\n0     N        1.2        546.0     3.37    65.0    1636.0  151.90   \n1     N        1.1        660.0     4.22    94.0    1257.0  151.90   \n2     Y        2.0        151.0     2.96    46.0     961.0   69.75   \n3     N        0.6        293.0     3.85    40.0     554.0  125.55   \n4     N        1.4        277.0     2.97   121.0    1110.0  125.00   \n\n   Tryglicerides  Platelets  Prothrombin  Stage  \n0           90.0      430.0         10.6    2.0  \n1          155.0      227.0         10.0    2.0  \n2          101.0      213.0         13.0    4.0  \n3           56.0      270.0         10.6    2.0  \n4          126.0      221.0          9.8    1.0  \n\nSample Submission : \n     id  Status_C  Status_CL  Status_D\n0  7905  0.628084   0.034788  0.337128\n1  7906  0.628084   0.034788  0.337128\n2  7907  0.628084   0.034788  0.337128\n3  7908  0.628084   0.034788  0.337128\n4  7909  0.628084   0.034788  0.337128\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Exploring the Data","metadata":{}},{"cell_type":"code","source":"print(\"\\nTrain Data Shape\", train.shape)\nprint(\"Test Data Shapa\", test.shape)\n\nprint(\"\\nMissing Values in Train Data: \")\nprint(train.isnull().sum())\n\nprint(\"\\nMissing Values in Test data: \")\nprint(train.isnull().sum())\n\nprint(\"/nTrain Data Summary\")\nprint(train.describe())","metadata":{"execution":{"iopub.status.busy":"2024-06-25T10:49:25.819984Z","iopub.execute_input":"2024-06-25T10:49:25.820768Z","iopub.status.idle":"2024-06-25T10:49:25.878927Z","shell.execute_reply.started":"2024-06-25T10:49:25.820728Z","shell.execute_reply":"2024-06-25T10:49:25.877417Z"},"trusted":true},"execution_count":146,"outputs":[{"name":"stdout","text":"\nTrain Data Shape (7905, 20)\nTest Data Shapa (5271, 19)\n\nMissing Values in Train Data: \nid               0\nN_Days           0\nDrug             0\nAge              0\nSex              0\nAscites          0\nHepatomegaly     0\nSpiders          0\nEdema            0\nBilirubin        0\nCholesterol      0\nAlbumin          0\nCopper           0\nAlk_Phos         0\nSGOT             0\nTryglicerides    0\nPlatelets        0\nProthrombin      0\nStage            0\nStatus           0\ndtype: int64\n\nMissing Values in Test data: \nid               0\nN_Days           0\nDrug             0\nAge              0\nSex              0\nAscites          0\nHepatomegaly     0\nSpiders          0\nEdema            0\nBilirubin        0\nCholesterol      0\nAlbumin          0\nCopper           0\nAlk_Phos         0\nSGOT             0\nTryglicerides    0\nPlatelets        0\nProthrombin      0\nStage            0\nStatus           0\ndtype: int64\n/nTrain Data Summary\n                id       N_Days           Age    Bilirubin  Cholesterol  \\\ncount  7905.000000  7905.000000   7905.000000  7905.000000  7905.000000   \nmean   3952.000000  2030.173308  18373.146490     2.594485   350.561923   \nstd    2282.121272  1094.233744   3679.958739     3.812960   195.379344   \nmin       0.000000    41.000000   9598.000000     0.300000   120.000000   \n25%    1976.000000  1230.000000  15574.000000     0.700000   248.000000   \n50%    3952.000000  1831.000000  18713.000000     1.100000   298.000000   \n75%    5928.000000  2689.000000  20684.000000     3.000000   390.000000   \nmax    7904.000000  4795.000000  28650.000000    28.000000  1775.000000   \n\n           Albumin       Copper      Alk_Phos         SGOT  Tryglicerides  \\\ncount  7905.000000  7905.000000   7905.000000  7905.000000    7905.000000   \nmean      3.548323    83.902846   1816.745250   114.604602     115.340164   \nstd       0.346171    75.899266   1903.750657    48.790945      52.530402   \nmin       1.960000     4.000000    289.000000    26.350000      33.000000   \n25%       3.350000    39.000000    834.000000    75.950000      84.000000   \n50%       3.580000    63.000000   1181.000000   108.500000     104.000000   \n75%       3.770000   102.000000   1857.000000   137.950000     139.000000   \nmax       4.640000   588.000000  13862.400000   457.250000     598.000000   \n\n         Platelets  Prothrombin        Stage  \ncount  7905.000000  7905.000000  7905.000000  \nmean    265.228969    10.629462     3.032511  \nstd      87.465579     0.781735     0.866511  \nmin      62.000000     9.000000     1.000000  \n25%     211.000000    10.000000     2.000000  \n50%     265.000000    10.600000     3.000000  \n75%     316.000000    11.000000     4.000000  \nmax     563.000000    18.000000     4.000000  \n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Visualization","metadata":{}},{"cell_type":"markdown","source":"### 1. Histogram","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize = (8, 6))\nplt.hist(train['Age']/365, bins = 30, edgecolor = 'black')\nplt.xlabel('Age(Years)')\nplt.ylabel('Frequency')\nplt.title('Histogram of Age (Years)')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-25T10:49:25.893173Z","iopub.execute_input":"2024-06-25T10:49:25.894168Z","iopub.status.idle":"2024-06-25T10:49:26.169364Z","shell.execute_reply.started":"2024-06-25T10:49:25.894125Z","shell.execute_reply":"2024-06-25T10:49:26.168428Z"},"trusted":true},"execution_count":147,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"### 2. Count Plots","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize = (8, 6))\nsns.countplot(x = 'Sex', data = train)\nplt.xlabel('Sex')\nplt.ylabel('Count')\nplt.title('Count of Male and Female')","metadata":{"execution":{"iopub.status.busy":"2024-06-25T10:49:26.170983Z","iopub.execute_input":"2024-06-25T10:49:26.171275Z","iopub.status.idle":"2024-06-25T10:49:26.443799Z","shell.execute_reply.started":"2024-06-25T10:49:26.171249Z","shell.execute_reply":"2024-06-25T10:49:26.442927Z"},"trusted":true},"execution_count":148,"outputs":[{"execution_count":148,"output_type":"execute_result","data":{"text/plain":"Text(0.5, 1.0, 'Count of Male and Female')"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"# Preprocessing the Data","metadata":{}},{"cell_type":"code","source":"print(train.columns)","metadata":{"execution":{"iopub.status.busy":"2024-06-25T10:49:26.444903Z","iopub.execute_input":"2024-06-25T10:49:26.44519Z","iopub.status.idle":"2024-06-25T10:49:26.449981Z","shell.execute_reply.started":"2024-06-25T10:49:26.445163Z","shell.execute_reply":"2024-06-25T10:49:26.449115Z"},"trusted":true},"execution_count":149,"outputs":[{"name":"stdout","text":"Index(['id', 'N_Days', 'Drug', 'Age', 'Sex', 'Ascites', 'Hepatomegaly',\n       'Spiders', 'Edema', 'Bilirubin', 'Cholesterol', 'Albumin', 'Copper',\n       'Alk_Phos', 'SGOT', 'Tryglicerides', 'Platelets', 'Prothrombin',\n       'Stage', 'Status'],\n      dtype='object')\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Drop Unique Columns","metadata":{}},{"cell_type":"code","source":"def dropUniqueColumns(dataFrame):\n    \n    uniqueCounts = dataFrame.nunique()\n    \n    uniqueColumns = uniqueCounts[uniqueCounts == 1].index\n    \n    dataFrame.drop(columns = uniqueColumns, inplace = True)\n    \n    return dataFrame\n\ntrain = dropUniqueColumns(train)\ntest = dropUniqueColumns(test)\nprint(train.columns)\nprint(test.columns)","metadata":{"execution":{"iopub.status.busy":"2024-06-25T10:49:26.529615Z","iopub.execute_input":"2024-06-25T10:49:26.529883Z","iopub.status.idle":"2024-06-25T10:49:26.552927Z","shell.execute_reply.started":"2024-06-25T10:49:26.529859Z","shell.execute_reply":"2024-06-25T10:49:26.552141Z"},"trusted":true},"execution_count":150,"outputs":[{"name":"stdout","text":"Index(['id', 'N_Days', 'Drug', 'Age', 'Sex', 'Ascites', 'Hepatomegaly',\n       'Spiders', 'Edema', 'Bilirubin', 'Cholesterol', 'Albumin', 'Copper',\n       'Alk_Phos', 'SGOT', 'Tryglicerides', 'Platelets', 'Prothrombin',\n       'Stage', 'Status'],\n      dtype='object')\nIndex(['id', 'N_Days', 'Drug', 'Age', 'Sex', 'Ascites', 'Hepatomegaly',\n       'Spiders', 'Edema', 'Bilirubin', 'Cholesterol', 'Albumin', 'Copper',\n       'Alk_Phos', 'SGOT', 'Tryglicerides', 'Platelets', 'Prothrombin',\n       'Stage'],\n      dtype='object')\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Separate Features and Target","metadata":{}},{"cell_type":"code","source":"X_train = train.drop(['Status'], axis = 1)\nY_train = train['Status']\n\nprint(X_train.columns)\nprint(Y_train.head())","metadata":{"execution":{"iopub.status.busy":"2024-06-25T10:49:26.929281Z","iopub.execute_input":"2024-06-25T10:49:26.929606Z","iopub.status.idle":"2024-06-25T10:49:26.937786Z","shell.execute_reply.started":"2024-06-25T10:49:26.929578Z","shell.execute_reply":"2024-06-25T10:49:26.936909Z"},"trusted":true},"execution_count":151,"outputs":[{"name":"stdout","text":"Index(['id', 'N_Days', 'Drug', 'Age', 'Sex', 'Ascites', 'Hepatomegaly',\n       'Spiders', 'Edema', 'Bilirubin', 'Cholesterol', 'Albumin', 'Copper',\n       'Alk_Phos', 'SGOT', 'Tryglicerides', 'Platelets', 'Prothrombin',\n       'Stage'],\n      dtype='object')\n0    D\n1    C\n2    D\n3    C\n4    C\nName: Status, dtype: object\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Label Encoding Categorial Values","metadata":{}},{"cell_type":"code","source":"categorialColumns = ['Drug', 'Sex', 'Ascites', 'Hepatomegaly', 'Spiders', 'Edema']\n\nlabelEncoders = {}\nfor column in categorialColumns:\n    le = LabelEncoder()\n    X_train[column] = le.fit_transform(X_train[column])\n    test[column] = le.transform(test[column])\n    labelEncoders[column] = le\n\nprint(X_train.head())\nprint(test.head())\n\nlabel_encoder = LabelEncoder()\nY_train_encoded = label_encoder.fit_transform(Y_train)","metadata":{"execution":{"iopub.status.busy":"2024-06-25T10:49:27.515685Z","iopub.execute_input":"2024-06-25T10:49:27.515979Z","iopub.status.idle":"2024-06-25T10:49:27.56384Z","shell.execute_reply.started":"2024-06-25T10:49:27.515956Z","shell.execute_reply":"2024-06-25T10:49:27.562919Z"},"trusted":true},"execution_count":152,"outputs":[{"name":"stdout","text":"   id  N_Days  Drug    Age  Sex  Ascites  Hepatomegaly  Spiders  Edema  \\\n0   0     999     0  21532    1        0             0        0      0   \n1   1    2574     1  19237    0        0             0        0      0   \n2   2    3428     1  13727    0        0             1        1      2   \n3   3    2576     1  18460    0        0             0        0      0   \n4   4     788     1  16658    0        0             1        0      0   \n\n   Bilirubin  Cholesterol  Albumin  Copper  Alk_Phos    SGOT  Tryglicerides  \\\n0        2.3        316.0     3.35   172.0    1601.0  179.80           63.0   \n1        0.9        364.0     3.54    63.0    1440.0  134.85           88.0   \n2        3.3        299.0     3.55   131.0    1029.0  119.35           50.0   \n3        0.6        256.0     3.50    58.0    1653.0   71.30           96.0   \n4        1.1        346.0     3.65    63.0    1181.0  125.55           96.0   \n\n   Platelets  Prothrombin  Stage  \n0      394.0          9.7    3.0  \n1      361.0         11.0    3.0  \n2      199.0         11.7    4.0  \n3      269.0         10.7    3.0  \n4      298.0         10.6    4.0  \n     id  N_Days  Drug    Age  Sex  Ascites  Hepatomegaly  Spiders  Edema  \\\n0  7905    3839     0  19724    0        0             1        0      0   \n1  7906    2468     0  14975    0        0             0        0      0   \n2  7907      51     1  13149    0        0             1        0      2   \n3  7908    2330     0  20510    0        0             0        0      0   \n4  7909    1615     0  21904    0        0             1        0      0   \n\n   Bilirubin  Cholesterol  Albumin  Copper  Alk_Phos    SGOT  Tryglicerides  \\\n0        1.2        546.0     3.37    65.0    1636.0  151.90           90.0   \n1        1.1        660.0     4.22    94.0    1257.0  151.90          155.0   \n2        2.0        151.0     2.96    46.0     961.0   69.75          101.0   \n3        0.6        293.0     3.85    40.0     554.0  125.55           56.0   \n4        1.4        277.0     2.97   121.0    1110.0  125.00          126.0   \n\n   Platelets  Prothrombin  Stage  \n0      430.0         10.6    2.0  \n1      227.0         10.0    2.0  \n2      213.0         13.0    4.0  \n3      270.0         10.6    2.0  \n4      221.0          9.8    1.0  \n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Scaling the data","metadata":{}},{"cell_type":"code","source":"numericalColumnsTrain = X_train.select_dtypes(include = ['float64', 'int64']).columns\nnumericalColumnsTest = test.select_dtypes(include = ['float64', 'int64']).columns\n\nscaler = StandardScaler()\n\nX_train[numericalColumnsTrain] = scaler.fit_transform(X_train[numericalColumnsTrain])\ntest[numericalColumnsTest] = scaler.transform(test[numericalColumnsTest])\n\nprint(X_train.head())\nprint(test.head())","metadata":{"execution":{"iopub.status.busy":"2024-06-25T10:49:28.106092Z","iopub.execute_input":"2024-06-25T10:49:28.106999Z","iopub.status.idle":"2024-06-25T10:49:28.142934Z","shell.execute_reply.started":"2024-06-25T10:49:28.106967Z","shell.execute_reply":"2024-06-25T10:49:28.142067Z"},"trusted":true},"execution_count":153,"outputs":[{"name":"stdout","text":"         id    N_Days      Drug       Age       Sex   Ascites  Hepatomegaly  \\\n0 -1.731832 -0.942430 -1.014655  0.858448  3.590654 -0.224718     -1.022906   \n1 -1.731393  0.497025  0.985557  0.234760 -0.278501 -0.224718     -1.022906   \n2 -1.730955  1.277529  0.985557 -1.262634 -0.278501 -0.224718      0.977607   \n3 -1.730517  0.498852  0.985557  0.023603 -0.278501 -0.224718     -1.022906   \n4 -1.730079 -1.135271  0.985557 -0.466107 -0.278501 -0.224718      0.977607   \n\n    Spiders     Edema  Bilirubin  Cholesterol   Albumin    Copper  Alk_Phos  \\\n0 -0.570095 -0.303472  -0.077237    -0.176908 -0.572940  1.160785 -0.113334   \n1 -0.570095 -0.303472  -0.444429     0.068784 -0.024043 -0.275420 -0.197909   \n2  1.754093  4.102312   0.185043    -0.263923  0.004846  0.620561 -0.413812   \n3 -0.570095 -0.303472  -0.523113    -0.484022 -0.139601 -0.341301 -0.086017   \n4 -0.570095 -0.303472  -0.391973    -0.023351  0.293739 -0.275420 -0.333965   \n\n       SGOT  Tryglicerides  Platelets  Prothrombin     Stage  \n0  1.336304      -0.996442   1.472341    -1.189049 -0.037522  \n1  0.414968      -0.520497   1.095026     0.474024 -0.037522  \n2  0.097266      -1.243933  -0.757248     1.369525  1.116605  \n3 -0.887610      -0.368194   0.043117     0.090238 -0.037522  \n4  0.224347      -0.368194   0.374697    -0.037691  1.116605  \n         id    N_Days      Drug       Age       Sex   Ascites  Hepatomegaly  \\\n0  1.732270  1.653158 -1.014655  0.367107 -0.278501 -0.224718      0.977607   \n1  1.732708  0.400147 -1.014655 -0.923478 -0.278501 -0.224718     -1.022906   \n2  1.733146 -1.808844  0.985557 -1.419711 -0.278501 -0.224718      0.977607   \n3  1.733585  0.274023 -1.014655  0.580710 -0.278501 -0.224718     -1.022906   \n4  1.734023 -0.379443 -1.014655  0.959543 -0.278501 -0.224718      0.977607   \n\n    Spiders     Edema  Bilirubin  Cholesterol   Albumin    Copper  Alk_Phos  \\\n0 -0.570095 -0.303472  -0.365745     1.000364 -0.515161 -0.249068 -0.094948   \n1 -0.570095 -0.303472  -0.391973     1.583881  1.940429  0.133042 -0.294041   \n2 -0.570095  4.102312  -0.155921    -1.021472 -1.699623 -0.499415 -0.449533   \n3 -0.570095 -0.303472  -0.523113    -0.294635  0.871525 -0.578472 -0.663335   \n4 -0.570095 -0.303472  -0.313289    -0.376532 -1.670733  0.488799 -0.371262   \n\n       SGOT  Tryglicerides  Platelets  Prothrombin     Stage  \n0  0.764440      -0.482421   1.883958    -0.037691 -1.191649  \n1  0.764440       0.755036  -0.437102    -0.805263 -1.191649  \n2 -0.919380      -0.273005  -0.597175     3.032598  1.116605  \n3  0.224347      -1.129706   0.054551    -0.037691 -1.191649  \n4  0.213073       0.202940  -0.505705    -1.061120 -2.345776  \n","output_type":"stream"}]},{"cell_type":"code","source":"X_train_split, X_valid, y_train_split, y_valid = train_test_split(X_train, Y_train_encoded, test_size=0.2, random_state=42)","metadata":{"execution":{"iopub.status.busy":"2024-06-25T10:49:28.445989Z","iopub.execute_input":"2024-06-25T10:49:28.446298Z","iopub.status.idle":"2024-06-25T10:49:28.456006Z","shell.execute_reply.started":"2024-06-25T10:49:28.446273Z","shell.execute_reply":"2024-06-25T10:49:28.455214Z"},"trusted":true},"execution_count":154,"outputs":[]},{"cell_type":"markdown","source":"# Model Training","metadata":{}},{"cell_type":"markdown","source":"## Hyperparameter Tuning","metadata":{}},{"cell_type":"code","source":"def objective(trial):\n    params = {\n        'objective' : 'multi:softprob', \n        'eval_metric' : 'mlogloss', \n        'num_class' : len(set(Y_train)), \n        'booster' : 'gbtree', \n        'tree_method' : 'hist', \n        'max_depth' : trial.suggest_int('max_depth', 3, 10), \n        'n_estimators': trial.suggest_int('n_estimators', 100, 1000), \n        'learning_rate': trial.suggest_float('learning_rate', 0.005, 0.5), \n        'subsample': trial.suggest_float('subsample', 0.5, 1.0), \n        'colsample_bytree': trial.suggest_float('colsample_bytree', 0.5, 1.0), \n        'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n        'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n    }\n    \n    model = XGBClassifier(**params, random_state = 42, use_label_encoder = False)\n    model.fit(X_train_split, y_train_split, eval_set=[(X_valid, y_valid)], early_stopping_rounds=10, verbose=False)\n    \n    Predictions = model.predict_proba(X_valid)\n    loss = log_loss(y_valid, Predictions)\n    \n    return loss\n\nstudy = optuna.create_study(direction = 'minimize')\nstudy.optimize(objective, n_trials = 50, timeout = 3600)\n\nprint(\"Best Parameters Found : \")\nprint(study.best_params)","metadata":{"execution":{"iopub.status.busy":"2024-06-25T10:49:29.653025Z","iopub.execute_input":"2024-06-25T10:49:29.653879Z","iopub.status.idle":"2024-06-25T10:50:00.79471Z","shell.execute_reply.started":"2024-06-25T10:49:29.653845Z","shell.execute_reply":"2024-06-25T10:50:00.793926Z"},"trusted":true},"execution_count":155,"outputs":[{"name":"stderr","text":"[I 2024-06-25 10:49:29,659] A new study created in memory with name: no-name-1f86cd9e-4364-4a72-8706-06e97cbd17a7\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:32,326] Trial 0 finished with value: 0.443929295642488 and parameters: {'max_depth': 10, 'n_estimators': 986, 'learning_rate': 0.033892405113573346, 'subsample': 0.6138877202764736, 'colsample_bytree': 0.8141118688632836, 'gamma': 0.8713388261145253, 'min_child_weight': 3.307479392996311}. Best is trial 0 with value: 0.443929295642488.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:32,574] Trial 1 finished with value: 0.4475166006715086 and parameters: {'max_depth': 4, 'n_estimators': 262, 'learning_rate': 0.32098457328046254, 'subsample': 0.7400787850878885, 'colsample_bytree': 0.5993645203562794, 'gamma': 9.918434039862054e-06, 'min_child_weight': 4.088200565234989}. Best is trial 0 with value: 0.443929295642488.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:32,812] Trial 2 finished with value: 0.44469896973915335 and parameters: {'max_depth': 4, 'n_estimators': 433, 'learning_rate': 0.4038705043117172, 'subsample': 0.8064573178600545, 'colsample_bytree': 0.6581676586378993, 'gamma': 0.00015582073253735197, 'min_child_weight': 9.919470000873448}. Best is trial 0 with value: 0.443929295642488.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:33,217] Trial 3 finished with value: 0.43115163321856403 and parameters: {'max_depth': 3, 'n_estimators': 779, 'learning_rate': 0.1674796803424209, 'subsample': 0.7537303871854999, 'colsample_bytree': 0.6912400308207503, 'gamma': 1.8795969560208678e-05, 'min_child_weight': 0.7775700031091584}. Best is trial 3 with value: 0.43115163321856403.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:33,382] Trial 4 finished with value: 0.4563511282499857 and parameters: {'max_depth': 8, 'n_estimators': 542, 'learning_rate': 0.41090925862213484, 'subsample': 0.616654749387181, 'colsample_bytree': 0.6016691725864665, 'gamma': 0.0029163770483912163, 'min_child_weight': 9.233853051638622}. Best is trial 3 with value: 0.43115163321856403.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:33,582] Trial 5 finished with value: 0.47177476951191405 and parameters: {'max_depth': 7, 'n_estimators': 542, 'learning_rate': 0.47625211407925033, 'subsample': 0.6873055616366694, 'colsample_bytree': 0.9822491953686425, 'gamma': 0.06551216252849405, 'min_child_weight': 1.214933398752918}. Best is trial 3 with value: 0.43115163321856403.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:34,353] Trial 6 finished with value: 0.45451683815987637 and parameters: {'max_depth': 8, 'n_estimators': 184, 'learning_rate': 0.10850969834363153, 'subsample': 0.9385708322416499, 'colsample_bytree': 0.8811798600585653, 'gamma': 6.727456464365904e-06, 'min_child_weight': 0.29308947316084555}. Best is trial 3 with value: 0.43115163321856403.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:35,031] Trial 7 finished with value: 0.43731259950986995 and parameters: {'max_depth': 5, 'n_estimators': 841, 'learning_rate': 0.07545463709239558, 'subsample': 0.8880020864662248, 'colsample_bytree': 0.8206595886783694, 'gamma': 4.6221927470759214e-05, 'min_child_weight': 0.9206927743725526}. Best is trial 3 with value: 0.43115163321856403.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:35,374] Trial 8 finished with value: 0.4305520003984205 and parameters: {'max_depth': 3, 'n_estimators': 786, 'learning_rate': 0.24919007164455617, 'subsample': 0.6554082759696718, 'colsample_bytree': 0.8980234197897137, 'gamma': 0.24564335698546905, 'min_child_weight': 0.3826155354347833}. Best is trial 8 with value: 0.4305520003984205.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:35,735] Trial 9 finished with value: 0.43650001008527145 and parameters: {'max_depth': 4, 'n_estimators': 913, 'learning_rate': 0.17479610217383626, 'subsample': 0.8901653746381668, 'colsample_bytree': 0.8926968831978532, 'gamma': 2.8987753219289227e-06, 'min_child_weight': 0.2035414422599955}. Best is trial 8 with value: 0.4305520003984205.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:36,073] Trial 10 finished with value: 0.44801548237375116 and parameters: {'max_depth': 6, 'n_estimators': 715, 'learning_rate': 0.2788948522617864, 'subsample': 0.5087098627203059, 'colsample_bytree': 0.5084725281752134, 'gamma': 1.728549488806468e-08, 'min_child_weight': 0.14287958473205345}. Best is trial 8 with value: 0.4305520003984205.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:36,502] Trial 11 finished with value: 0.43434359570662984 and parameters: {'max_depth': 3, 'n_estimators': 745, 'learning_rate': 0.18426517729136727, 'subsample': 0.7932288353826452, 'colsample_bytree': 0.7160406467200483, 'gamma': 0.005885801361806299, 'min_child_weight': 0.5206664384782765}. Best is trial 8 with value: 0.4305520003984205.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:36,859] Trial 12 finished with value: 0.43261331369176864 and parameters: {'max_depth': 3, 'n_estimators': 708, 'learning_rate': 0.1985998833066689, 'subsample': 0.6529219476438084, 'colsample_bytree': 0.7333943700597809, 'gamma': 3.351302489701866e-07, 'min_child_weight': 0.5132434911495508}. Best is trial 8 with value: 0.4305520003984205.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:37,117] Trial 13 finished with value: 0.4460953648882543 and parameters: {'max_depth': 3, 'n_estimators': 808, 'learning_rate': 0.2772031736837778, 'subsample': 0.5307097815727915, 'colsample_bytree': 0.9493364712562898, 'gamma': 0.0006068681344347066, 'min_child_weight': 1.1034598788921626}. Best is trial 8 with value: 0.4305520003984205.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:37,578] Trial 14 finished with value: 0.4406856647445616 and parameters: {'max_depth': 5, 'n_estimators': 647, 'learning_rate': 0.1330281023950478, 'subsample': 0.7272650506563307, 'colsample_bytree': 0.7999250788102186, 'gamma': 0.7855104635764772, 'min_child_weight': 0.4853972458143548}. Best is trial 8 with value: 0.4305520003984205.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:37,846] Trial 15 finished with value: 0.45002106656711505 and parameters: {'max_depth': 5, 'n_estimators': 407, 'learning_rate': 0.34109247920625785, 'subsample': 0.822774916072705, 'colsample_bytree': 0.6812539486712119, 'gamma': 0.030213883656743493, 'min_child_weight': 1.8752975408818122}. Best is trial 8 with value: 0.4305520003984205.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:38,356] Trial 16 finished with value: 0.46867326309462254 and parameters: {'max_depth': 10, 'n_estimators': 870, 'learning_rate': 0.22897438019761526, 'subsample': 0.580947219336346, 'colsample_bytree': 0.910263745326679, 'gamma': 1.7030294848658597e-07, 'min_child_weight': 0.31503356094567947}. Best is trial 8 with value: 0.4305520003984205.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:40,907] Trial 17 finished with value: 0.43827490371940947 and parameters: {'max_depth': 6, 'n_estimators': 980, 'learning_rate': 0.01864416144758274, 'subsample': 0.70389755288997, 'colsample_bytree': 0.7776338384359163, 'gamma': 0.0005776149440437564, 'min_child_weight': 0.11073808576966337}. Best is trial 8 with value: 0.4305520003984205.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:41,253] Trial 18 finished with value: 0.43774281558682704 and parameters: {'max_depth': 3, 'n_estimators': 620, 'learning_rate': 0.23096226179421397, 'subsample': 0.7689371944018536, 'colsample_bytree': 0.8552857438861818, 'gamma': 7.203958253062033e-07, 'min_child_weight': 0.7945635655424973}. Best is trial 8 with value: 0.4305520003984205.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:41,718] Trial 19 finished with value: 0.4353122928221407 and parameters: {'max_depth': 4, 'n_estimators': 778, 'learning_rate': 0.15574296635686544, 'subsample': 0.8580792187762918, 'colsample_bytree': 0.6165787350293428, 'gamma': 4.38245184412169e-05, 'min_child_weight': 1.7944621700654864}. Best is trial 8 with value: 0.4305520003984205.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:42,579] Trial 20 finished with value: 0.45413449904299846 and parameters: {'max_depth': 7, 'n_estimators': 409, 'learning_rate': 0.07981868316957588, 'subsample': 0.9790111455375314, 'colsample_bytree': 0.999881713168022, 'gamma': 0.08481510496394602, 'min_child_weight': 0.32015616383901657}. Best is trial 8 with value: 0.4305520003984205.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:42,932] Trial 21 finished with value: 0.43287368364809153 and parameters: {'max_depth': 3, 'n_estimators': 674, 'learning_rate': 0.21370737168801254, 'subsample': 0.6623212319108209, 'colsample_bytree': 0.7266731178038479, 'gamma': 3.60305657736982e-08, 'min_child_weight': 0.4859030944151513}. Best is trial 8 with value: 0.4305520003984205.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:43,288] Trial 22 finished with value: 0.4354678840457101 and parameters: {'max_depth': 3, 'n_estimators': 598, 'learning_rate': 0.28720503602997854, 'subsample': 0.6520433791354061, 'colsample_bytree': 0.7584762162346647, 'gamma': 5.09814573094284e-07, 'min_child_weight': 0.689415773846932}. Best is trial 8 with value: 0.4305520003984205.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:43,676] Trial 23 finished with value: 0.4291303217454732 and parameters: {'max_depth': 4, 'n_estimators': 743, 'learning_rate': 0.18937307549148175, 'subsample': 0.5741761438945734, 'colsample_bytree': 0.6924711127781533, 'gamma': 1.603125499040802e-07, 'min_child_weight': 0.2009221612596923}. Best is trial 23 with value: 0.4291303217454732.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:44,094] Trial 24 finished with value: 0.43788693984576815 and parameters: {'max_depth': 4, 'n_estimators': 916, 'learning_rate': 0.14518496614134918, 'subsample': 0.5578073345027728, 'colsample_bytree': 0.6682134629179801, 'gamma': 1.6192409602847526e-06, 'min_child_weight': 0.1940503154975924}. Best is trial 23 with value: 0.4291303217454732.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:44,306] Trial 25 finished with value: 0.44858303575950603 and parameters: {'max_depth': 5, 'n_estimators': 795, 'learning_rate': 0.33850112288104595, 'subsample': 0.6005769246864479, 'colsample_bytree': 0.566466448171921, 'gamma': 6.902153972538404e-08, 'min_child_weight': 0.16789236396420684}. Best is trial 23 with value: 0.4291303217454732.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:44,629] Trial 26 finished with value: 0.4321997169671007 and parameters: {'max_depth': 4, 'n_estimators': 496, 'learning_rate': 0.24797515532351808, 'subsample': 0.5723772794730658, 'colsample_bytree': 0.7048023734678706, 'gamma': 0.00020333598934225983, 'min_child_weight': 0.24091851655027352}. Best is trial 23 with value: 0.4291303217454732.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:45,316] Trial 27 finished with value: 0.4285405505068365 and parameters: {'max_depth': 3, 'n_estimators': 888, 'learning_rate': 0.10786910749542782, 'subsample': 0.7039877634757948, 'colsample_bytree': 0.6389075139242973, 'gamma': 1.2582699667124653e-05, 'min_child_weight': 0.10577867768014379}. Best is trial 27 with value: 0.4285405505068365.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:46,010] Trial 28 finished with value: 0.43340200127274986 and parameters: {'max_depth': 5, 'n_estimators': 891, 'learning_rate': 0.08252016571437801, 'subsample': 0.6983222866300857, 'colsample_bytree': 0.63672177983977, 'gamma': 1.0319786601815426e-07, 'min_child_weight': 0.1594657992641365}. Best is trial 27 with value: 0.4285405505068365.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:46,622] Trial 29 finished with value: 0.4587974803373514 and parameters: {'max_depth': 9, 'n_estimators': 978, 'learning_rate': 0.11652521178848069, 'subsample': 0.6389033452665779, 'colsample_bytree': 0.5563524578335435, 'gamma': 1.1268176698409812e-08, 'min_child_weight': 0.13637255733894724}. Best is trial 27 with value: 0.4285405505068365.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:50,787] Trial 30 finished with value: 0.439598905173394 and parameters: {'max_depth': 6, 'n_estimators': 846, 'learning_rate': 0.010695095556427447, 'subsample': 0.6171152531109512, 'colsample_bytree': 0.829101360219678, 'gamma': 0.46108191158429623, 'min_child_weight': 0.10256340915184815}. Best is trial 27 with value: 0.4285405505068365.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:51,244] Trial 31 finished with value: 0.4323271929046406 and parameters: {'max_depth': 3, 'n_estimators': 755, 'learning_rate': 0.1625899814788099, 'subsample': 0.7627898721392282, 'colsample_bytree': 0.6824368064447266, 'gamma': 8.03220255768446e-06, 'min_child_weight': 0.3968488610740549}. Best is trial 27 with value: 0.4285405505068365.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:52,170] Trial 32 finished with value: 0.4299314927154016 and parameters: {'max_depth': 4, 'n_estimators': 929, 'learning_rate': 0.06604284647925, 'subsample': 0.7258661608764333, 'colsample_bytree': 0.7741906036882193, 'gamma': 2.414594887463274e-05, 'min_child_weight': 0.2359905817150525}. Best is trial 27 with value: 0.4285405505068365.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:53,136] Trial 33 finished with value: 0.4330255686914359 and parameters: {'max_depth': 4, 'n_estimators': 998, 'learning_rate': 0.049052571195401184, 'subsample': 0.683213383266416, 'colsample_bytree': 0.7595806538682933, 'gamma': 1.9282318807197176e-06, 'min_child_weight': 0.24470391264113756}. Best is trial 27 with value: 0.4285405505068365.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:53,727] Trial 34 finished with value: 0.4316096425272045 and parameters: {'max_depth': 4, 'n_estimators': 926, 'learning_rate': 0.10111249585482619, 'subsample': 0.7276337115269428, 'colsample_bytree': 0.6423548815509614, 'gamma': 0.0015774558763370762, 'min_child_weight': 0.12453467337705117}. Best is trial 27 with value: 0.4285405505068365.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:54,648] Trial 35 finished with value: 0.43599397068848467 and parameters: {'max_depth': 4, 'n_estimators': 839, 'learning_rate': 0.046444843809228226, 'subsample': 0.552637298220403, 'colsample_bytree': 0.9287673236375831, 'gamma': 2.9899392533219992e-05, 'min_child_weight': 0.24199517155242822}. Best is trial 27 with value: 0.4285405505068365.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:54,917] Trial 36 finished with value: 0.4438098176468252 and parameters: {'max_depth': 3, 'n_estimators': 946, 'learning_rate': 0.31273083545268426, 'subsample': 0.6275133624518388, 'colsample_bytree': 0.5687821299189499, 'gamma': 0.00013289761477998258, 'min_child_weight': 4.619944572493857}. Best is trial 27 with value: 0.4285405505068365.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:55,612] Trial 37 finished with value: 0.43643160698303024 and parameters: {'max_depth': 4, 'n_estimators': 708, 'learning_rate': 0.06250534929774218, 'subsample': 0.5970482642596844, 'colsample_bytree': 0.8595566540716368, 'gamma': 0.009656483577112945, 'min_child_weight': 0.3587656295209161}. Best is trial 27 with value: 0.4285405505068365.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:55,964] Trial 38 finished with value: 0.44519100283331864 and parameters: {'max_depth': 5, 'n_estimators': 295, 'learning_rate': 0.37921776985841293, 'subsample': 0.6743871106433538, 'colsample_bytree': 0.6129016294282598, 'gamma': 1.6197893724143517e-05, 'min_child_weight': 0.19645573292129195}. Best is trial 27 with value: 0.4285405505068365.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:56,739] Trial 39 finished with value: 0.4560359576312258 and parameters: {'max_depth': 9, 'n_estimators': 816, 'learning_rate': 0.1273178815363497, 'subsample': 0.7160459933059868, 'colsample_bytree': 0.7823308153413497, 'gamma': 4.805291880440868e-06, 'min_child_weight': 0.10113159534138601}. Best is trial 27 with value: 0.4285405505068365.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:57,079] Trial 40 finished with value: 0.4437059709266188 and parameters: {'max_depth': 4, 'n_estimators': 108, 'learning_rate': 0.19978898282726865, 'subsample': 0.7447438203867143, 'colsample_bytree': 0.9608455474642331, 'gamma': 0.00025846389152335374, 'min_child_weight': 0.2648360860237008}. Best is trial 27 with value: 0.4285405505068365.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:57,693] Trial 41 finished with value: 0.43511709751607114 and parameters: {'max_depth': 3, 'n_estimators': 873, 'learning_rate': 0.09240978840446457, 'subsample': 0.8012742623262236, 'colsample_bytree': 0.6961638204685635, 'gamma': 1.3410699982900414e-05, 'min_child_weight': 0.5939022989251239}. Best is trial 27 with value: 0.4285405505068365.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:58,129] Trial 42 finished with value: 0.4310152586351865 and parameters: {'max_depth': 3, 'n_estimators': 752, 'learning_rate': 0.17747843169142594, 'subsample': 0.7678587542130493, 'colsample_bytree': 0.6444344013344043, 'gamma': 9.053125221814507e-05, 'min_child_weight': 0.4018793200805986}. Best is trial 27 with value: 0.4285405505068365.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:58,338] Trial 43 finished with value: 0.43961459788064833 and parameters: {'max_depth': 3, 'n_estimators': 588, 'learning_rate': 0.4807333091024415, 'subsample': 0.8363269615032803, 'colsample_bytree': 0.6499173762862476, 'gamma': 0.0014223579852703087, 'min_child_weight': 0.3728818341350279}. Best is trial 27 with value: 0.4285405505068365.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:58,750] Trial 44 finished with value: 0.43117211457607946 and parameters: {'max_depth': 3, 'n_estimators': 670, 'learning_rate': 0.18712465238427406, 'subsample': 0.7798026728725899, 'colsample_bytree': 0.587902055108191, 'gamma': 9.071745681959236e-05, 'min_child_weight': 0.1783486160943528}. Best is trial 27 with value: 0.4285405505068365.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:59,246] Trial 45 finished with value: 0.42884066023100165 and parameters: {'max_depth': 3, 'n_estimators': 734, 'learning_rate': 0.1444288999960176, 'subsample': 0.7517511189958649, 'colsample_bytree': 0.7431144358106208, 'gamma': 7.18394269932851e-05, 'min_child_weight': 0.12687527953475738}. Best is trial 27 with value: 0.4285405505068365.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:49:59,683] Trial 46 finished with value: 0.43498833220349475 and parameters: {'max_depth': 4, 'n_estimators': 944, 'learning_rate': 0.1399558427590668, 'subsample': 0.7067763588811463, 'colsample_bytree': 0.74834021957529, 'gamma': 1.242117557741104e-06, 'min_child_weight': 0.1438945270384088}. Best is trial 27 with value: 0.4285405505068365.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:50:00,058] Trial 47 finished with value: 0.4437074851096466 and parameters: {'max_depth': 4, 'n_estimators': 723, 'learning_rate': 0.25882993476943, 'subsample': 0.6656606024669989, 'colsample_bytree': 0.8133480346905866, 'gamma': 0.00057928161453325, 'min_child_weight': 0.13194242938755674}. Best is trial 27 with value: 0.4285405505068365.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:50:00,564] Trial 48 finished with value: 0.435079260938711 and parameters: {'max_depth': 5, 'n_estimators': 824, 'learning_rate': 0.11340403198750162, 'subsample': 0.5126299707767673, 'colsample_bytree': 0.7349498629675169, 'gamma': 4.584424319514373e-06, 'min_child_weight': 0.21524058208267788}. Best is trial 27 with value: 0.4285405505068365.\n/tmp/ipykernel_34/1834345444.py:13: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'gamma': trial.suggest_loguniform('gamma', 1e-8, 1.0),\n/tmp/ipykernel_34/1834345444.py:14: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  'min_child_weight': trial.suggest_loguniform('min_child_weight', 0.1, 10.0),\n/opt/conda/lib/python3.10/site-packages/xgboost/sklearn.py:889: UserWarning: `early_stopping_rounds` in `fit` method is deprecated for better compatibility with scikit-learn, use `early_stopping_rounds` in constructor or`set_params` instead.\n  warnings.warn(\n[I 2024-06-25 10:50:00,787] Trial 49 finished with value: 0.43837137104277346 and parameters: {'max_depth': 3, 'n_estimators': 865, 'learning_rate': 0.44550953850725167, 'subsample': 0.7451057336158202, 'colsample_bytree': 0.8488308071672424, 'gamma': 5.922093621818153e-05, 'min_child_weight': 0.12188902885382445}. Best is trial 27 with value: 0.4285405505068365.\n","output_type":"stream"},{"name":"stdout","text":"Best Parameters Found : \n{'max_depth': 3, 'n_estimators': 888, 'learning_rate': 0.10786910749542782, 'subsample': 0.7039877634757948, 'colsample_bytree': 0.6389075139242973, 'gamma': 1.2582699667124653e-05, 'min_child_weight': 0.10577867768014379}\n","output_type":"stream"}]},{"cell_type":"code","source":"best_params = study.best_params\n\nkfold = KFold(n_splits = 5, shuffle = True, random_state = 42)\n\nxgb_model = XGBClassifier(**best_params, random_state = 42, use_label_encoder = False)\nrf_model = RandomForestClassifier(random_state = 42)\n\nensemble_model = VotingClassifier(estimators = [\n    ('xgb', xgb_model), \n    ('rf', rf_model)\n], voting = 'soft')\n\n\n\nensemble_model.fit(X_train, Y_train_encoded)\n\nensemblePredictions = ensemble_model.predict_proba(test)\n\n#valuePredictions = best_model.predict_proba(test)","metadata":{"execution":{"iopub.status.busy":"2024-06-25T10:27:31.72547Z","iopub.execute_input":"2024-06-25T10:27:31.725798Z","iopub.status.idle":"2024-06-25T10:27:35.867329Z","shell.execute_reply.started":"2024-06-25T10:27:31.725772Z","shell.execute_reply":"2024-06-25T10:27:35.865901Z"},"trusted":true},"execution_count":139,"outputs":[]},{"cell_type":"markdown","source":"# Submission File","metadata":{}},{"cell_type":"code","source":"Submission = pd.DataFrame(ensemblePredictions, columns=[\"Status_C\", \"Status_CL\", \"Status_D\"])\nsmth = pd.read_csv('/kaggle/input/thapar-summer-school-2024/test.csv')\nSubmission['id'] = smth['id']\nSubmission = Submission[['id', 'Status_C', 'Status_CL', 'Status_D']]","metadata":{"execution":{"iopub.status.busy":"2024-06-25T10:27:42.634892Z","iopub.execute_input":"2024-06-25T10:27:42.635599Z","iopub.status.idle":"2024-06-25T10:27:42.658486Z","shell.execute_reply.started":"2024-06-25T10:27:42.635566Z","shell.execute_reply":"2024-06-25T10:27:42.657735Z"},"trusted":true},"execution_count":140,"outputs":[]},{"cell_type":"code","source":"Submission.to_csv(\"submission.csv\", index=False)\nprint(\"Submission file created successfully.\")","metadata":{"execution":{"iopub.status.busy":"2024-06-25T10:27:43.04532Z","iopub.execute_input":"2024-06-25T10:27:43.045964Z","iopub.status.idle":"2024-06-25T10:27:43.089431Z","shell.execute_reply.started":"2024-06-25T10:27:43.045937Z","shell.execute_reply":"2024-06-25T10:27:43.088464Z"},"trusted":true},"execution_count":141,"outputs":[{"name":"stdout","text":"Submission file created successfully.\n","output_type":"stream"}]}]}